name: Auto Crawl & Deploy

on:
  schedule:
    - cron: "0 */6 * * *"  # 每6小时运行
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 克隆仓库
      uses: actions/checkout@v3
      with:
        persist-credentials: true
        fetch-depth: 0

    - name: 设置 Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: 安装依赖
      run: pip install -r requirements.txt

    - name: 运行爬虫
      run: python crawler.py -o output/nodes.json

    # 添加文件检查步骤
    - name: 检查 nodes.json 文件
      run: |
        echo "检查 output/nodes.json 文件..."
        ls -lh output/
        echo "文件大小:"
        stat -c %s output/nodes.json
        echo "文件内容开头:"
        head -c 200 output/nodes.json
        
        # 确保文件非空
        if [ ! -s "output/nodes.json" ]; then
          echo "错误: nodes.json 文件为空!"
          exit 1
        fi

    - name: 拷贝 nodes.json 到网站目录
      run: cp output/nodes.json website/nodes.json

    - name: 提交并推送更新
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add website/nodes.json
        if git diff --cached --quiet; then
          echo "没有变化需要提交"
        else
          git commit -m "🔄 Auto update nodes.json"
          git push
        fi

    - name: 上传网站文件到 Hostinger（FTP）
      env:
        FTP_HOST: ${{ secrets.FTP_HOST }}
        FTP_USER: ${{ secrets.FTP_USER }}
        FTP_PASS: ${{ secrets.FTP_PASS }}
      run: python ftp_upload.py
      
    - name: 清除 Cloudflare 缓存
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      run: |
        if [ -n "$CLOUDFLARE_API_TOKEN" ] && [ -n "$ZONE_ID" ]; then
          echo "清除 Cloudflare 缓存..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/purge_cache" \
            -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"files":["https://cloakaccess.com/nodes.json"]}'
        else
          echo "跳过 Cloudflare 缓存清除，缺少必要环境变量"
        fi
